openapi: 3.0.3
info:
  title: Swagger Student - OpenAPI 3.0
  description: Student attributes API
  version: 1.0.0
paths:
  /student:
    post:
      tags:
        - student
      summary: Create student
      description: This can only be done by the logged-in student.
      operationId: createStudent
      requestBody:
        description: Created student object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
  /student/createWithList:
    post:
      tags:
        - student
      summary: Creates a list of students with the given input array
      operationId: createStudentsWithListInput
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
  /student/login:
    get:
      tags:
        - student
      summary: Logs student into the system
      operationId: loginStudent
      parameters:
        - name: studentname
          in: query
          description: The student name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid studentname/password supplied
  /student/logout:
    get:
      tags:
        - student
      summary: Logs out the current logged-in student session
      operationId: logoutStudent
      responses:
        '200':
          description: Successful operation
  /student/{studentname}:
    get:
      tags:
        - student
      summary: Get student by student name
      operationId: getStudentByName
      parameters:
        - name: studentname
          in: path
          description: 'The name that needs to be fetched'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Invalid studentname supplied
        '404':
          description: Student not found
    put:
      tags:
        - student
      summary: Update student
      operationId: updateStudent
      parameters:
        - name: studentname
          in: path
          description: Name that needs to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existing student in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Successful operation
    delete:
      tags:
        - student
      summary: Delete student
      operationId: deleteStudent
      parameters:
        - name: studentname
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid studentname supplied
        '404':
          description: Student not found
components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        STD:
          type: string
          example: STD22112
        Groupe:
          type: string
          example: H4
        studentname:
          type: string
          example: thestudent
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        age:
          type: integer
          example: 18